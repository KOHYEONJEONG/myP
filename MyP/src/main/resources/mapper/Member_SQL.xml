<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="member">
	<select id="getMemberList" parameterType="hashmap" resultType="hashmap">
	SELECT M.MEM_NUM, M.ID, M.NM, M.EMAIL, M.WARNING, M.AUTORITY_NM , M.NORNK
	FROM( SELECT M.MEM_NUM, M.ID, M.NM, M.EMAIL, M.WARNING, AT.AUTORITY_NM, ROW_NUMBER() OVER(ORDER BY M.MEM_NUM ASC, M.NM ASC) AS NORNK,ROW_NUMBER() OVER(ORDER BY M.MEM_NUM DESC, M.NM DESC) AS RNK
			FROM MEMBER M INNER JOIN AUTORITY AT ON M.autority_num = AT.autority_num
			WHERE WIT_DT IS NULL
			<if test="searchText != null and searchText != ''">
				<choose>
					<when test="searchGbn eq 1">
						AND ID = #{searchText}
					</when>
					<when test="searchGbn eq 2">
						AND NM = #{searchText}
					</when>
					<when test="searchGbn eq 3">
						AND EMAIL LIKE '%' || #{searchText} || '%'
					</when>
					<when test="searchGbn eq 4">
						AND AT.AUTORITY_NM = #{searchText}
					</when>
		        </choose>
		       </if>
	      ) M
	WHERE M.RNK BETWEEN #{start} AND #{end}
	</select>
	
	<select id="getMemberCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM MEMBER M INNER JOIN AUTORITY AT 
							  ON M.autority_num = AT.autority_num
		WHERE WIT_DT IS NULL
		<if test="searchText != null and searchText != ''">
			<choose>
				<when test="searchGbn eq 1">
					AND ID = #{searchText}
				</when>
				<when test="searchGbn eq 2">
					AND NM = #{searchText}
				</when>
				<when test="searchGbn eq 3">
					AND EMAIL LIKE '%' || #{searchText} || '%'
				</when>
				<when test="searchGbn eq 4">
					AND AT.AUTORITY_NM = #{searchText}
				</when>
	        </choose>
	       </if>
	</select>
	
	<!-- 해당 회원에 이미지만 조회하는 쿼리 -->
	<select id="getMemberImg" resultType="hashmap" parameterType="hashmap">
		 SELECT M.MEM_NUM, M.IMG, M.ID
			FROM MEMBER M 
			WHERE WIT_DT IS NULL
			AND MEM_NUM = #{mem_num}
	</select>
	
	
	<select id="getMember" resultType="hashmap" parameterType="hashmap">
		 SELECT M.MEM_NUM, M.IMG, M.ID, M.NM, M.EMAIL, M.WARNING, AT.AUTORITY_NM,
					 CASE WHEN TO_CHAR(REG_DT, 'YY.MM.DD') = TO_CHAR(SYSDATE, 'YY.MM.DD')
									THEN TO_CHAR(REG_DT, 'HH24:MI')
									ELSE TO_CHAR(REG_DT,'YY.MM.DD')
									END AS REG_DT
			FROM MEMBER M INNER JOIN AUTORITY AT 
			    				  ON M.autority_num = AT.autority_num
			WHERE WIT_DT IS NULL
			AND MEM_NUM = #{no}
	</select>
	
	<select id="myReviewList" resultType="hashmap" parameterType="hashmap">
		<!-- 순위, 리뷰 번호, 주차장명, 제목, 등록일, 조회수 -->
		SELECT R.NORNK, R.REVIEW_NUM, R.CAR_PARK_NM, R.TITLE, R.REG_DT, R.HIT
		FROM(SELECT R.REVIEW_NUM,C.CAR_PARK_NM, R.TITLE, R.HIT,
					CASE WHEN TO_CHAR(REG_DT, 'YY.MM.DD') = TO_CHAR(SYSDATE, 'YY.MM.DD')
									THEN TO_CHAR(REG_DT, 'HH24:MI')
									ELSE TO_CHAR(REG_DT,'YY.MM.DD')
									END AS REG_DT,
		 			ROW_NUMBER() OVER(ORDER BY R.REVIEW_NUM ASC) AS NORNK, ROW_NUMBER() OVER(ORDER BY R.REVIEW_NUM DESC) AS RNK
				FROM REVIEW R JOIN CAR_PARK C
				                ON R.CAR_PARK_MAG_NUM = C.CAR_PARK_MAG_NUM
				WHERE DEL = 1 AND MEM_NUM = #{no}
				<if test="searchText != null and searchText != ''">
					<choose>
						<when test="searchGbn eq 1">
							AND C.CAR_PARK_NM LIKE '%' || #{searchText}  || '%'
						</when>
						<when test="searchGbn eq 2">
							AND TITLE LIKE '%' || #{searchText}  || '%'
						</when>
						<when test="searchGbn eq 3">
							AND CON LIKE '%' || #{searchText} || '%'
						</when>
		        	</choose>
       			</if>
	    )R
	    WHERE R.RNK BETWEEN #{start} AND #{end}		
	</select>
	
	<select id="getMyReviewCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*) AS CNT
		FROM REVIEW R JOIN CAR_PARK C
		                ON R.CAR_PARK_MAG_NUM = C.CAR_PARK_MAG_NUM
		WHERE R.DEL = 1 AND R.MEM_NUM = #{no}
		<if test="searchText != null and searchText != ''">
			<choose>
				<when test="searchGbn eq 1">
					AND C.CAR_PARK_NM LIKE '%' || #{searchText}  || '%'
				</when>
				<when test="searchGbn eq 2">
					AND R.TITLE LIKE '%' || #{searchText}  || '%'
				</when>
				<when test="searchGbn eq 3">
					AND R.CON LIKE '%' || #{searchText} || '%'
				</when>
	        </choose>
       </if>
	</select>
	
	<select id="getMyReview" resultType="hashmap" parameterType="hashmap">
		SELECT CAR_PARK_NM, PHONE, CAR_PARK_TP_NM, ADDRESS, PAYORFREE_DIV, R.CON,R.TITLE, R.CCTV_STAR_SCORE,R.ENV_STAR_SCORE, R.FEE_STAR_SCORE, R.DIS_STAR_SCORE,
				TO_CHAR(WEEKDAY_START_TIME, 'HH24:MI:SS') AS WEEKDAY_START_TIME, TO_CHAR(WEEKDAY_END_TIME, 'HH24:MI:SS') AS WEEKDAY_END_TIME,
				TO_CHAR(WEEKEND_START_TIME, 'HH24:MI:SS') AS WEEKEND_START_TIME, TO_CHAR(WEEKEND_END_TIME, 'HH24:MI:SS') AS WEEKEND_END_TIME,  
				FEE_RATE, TIME_RATE,ADD_FEE, ADD_TIME_RATE
		FROM CAR_PARK C JOIN REVIEW R
				    	  ON R.CAR_PARK_MAG_NUM = C.CAR_PARK_MAG_NUM
				    	  AND R.DEL = 1 AND R.REVIEW_NUM = #{review_num}
		WHERE R.MEM_NUM = #{no} 
	</select>
	
	<update id="memUpdate" parameterType="hashmap">
		UPDATE MEMBER
		SET IMG = #{img}
		WHERE MEM_NUM = #{no}
	</update>
	
	<select id="pwcheckMem" parameterType="hashmap" resultType="hashmap">
		SELECT MEM_NUM, NM, AUTORITY_NUM
		FROM MEMBER
		WHERE MEM_NUM= #{memNo}
		AND PW = #{pw}
	</select>


	<!-- 회원탈퇴 사유 -->
	<select id="memWitReason" resultType="hashmap">
		SELECT C.CATE_NM
		FROM CATEGORY C LEFT OUTER JOIN CATEGORY_DIV CD
									 ON C.DIV_NUM = CD.DIV_NUM
		WHERE C.DIV_NUM= 23<!-- 회원탈퇴 num -->
	</select>
	
	<!-- 회원탈퇴 -->
	<update id="memWit" parameterType="hashmap">
		UPDATE MEMBER 
		SET WIT_DT = sysdate,
			REASON = #{reasonHtml}
		WHERE MEM_NUM = #{memNo}
	</update>
	
	<update id="deleteMyreview" parameterType="hashmap">
		UPDATE REVIEW
		SET DEL = 0
		WHERE REVIEW_NUM = #{review_num} AND MEM_NUM = #{no} 
	</update>
	
	<update id="updateMyreview" parameterType="hashmap">
		UPDATE REVIEW
		SET CCTV_STAR_SCORE = #{cctv_star} ,
		    ENV_STAR_SCORE = #{env_star},
			FEE_STAR_SCORE = #{fee_star},
			DIS_STAR_SCORE = #{dis_star},
			CON = #{sendCon},
			TITLE = #{title}
		WHERE REVIEW_NUM = #{review_num} AND MEM_NUM = #{no} 
	</update>
	
	<!-- 나의 QnA Board -->
	<select id="qnaList" resultType="hashmap" parameterType="hashmap">
		SELECT Q.QNA_NUM, Q.TITLE, Q.PRIVATE, Q.HIT, Q.REG_DT, Q.ANSWER_DT, Q.NORNK
		FROM(SELECT Q.QNA_NUM, Q.TITLE, Q.CON , Q.PRIVATE, Q.HIT, 
					CASE WHEN TO_CHAR(Q.REG_DT, 'YY.MM.DD') = TO_CHAR(SYSDATE, 'YY.MM.DD')
									THEN TO_CHAR(Q.REG_DT, 'HH24:MI')
									ELSE TO_CHAR(Q.REG_DT,'YY.MM.DD')
									END AS REG_DT,
					CASE WHEN TO_CHAR(Q.ANSWER_DT, 'YY.MM.DD') = TO_CHAR(SYSDATE, 'YY.MM.DD')
									THEN TO_CHAR(Q.ANSWER_DT, 'HH24:MI')
									ELSE TO_CHAR(Q.ANSWER_DT,'YY.MM.DD')
									END AS ANSWER_DT,				
					ROW_NUMBER() OVER(ORDER BY Q.QNA_NUM ASC) AS NORNK, ROW_NUMBER() OVER(ORDER BY  Q.QNA_NUM DESC) AS RNK
			 FROM QNA Q 
			 WHERE MEM_NUM = #{no} AND DEL = 1
			<if test="searchText != null and searchText != ''">
				<choose>
					<when test="searchGbn eq 1">
						AND TITLE LIKE '%' || #{searchText}  || '%'
					</when>
					<when test="searchGbn eq 2">
						AND CON LIKE '%' || #{searchText} || '%'
					</when>
	        	</choose>
	       	</if>
		    )Q
	    WHERE Q.RNK BETWEEN #{start} AND #{end}
	</select>
	
	<select id="qnaListCnt" parameterType="hashmap" resultType="Integer">
		SELECT COUNT(*)
		FROM QNA Q 
		WHERE MEM_NUM = #{no} AND DEL = 1
		<if test="searchText != null and searchText != ''">
			<choose>
				<when test="searchGbn eq 1">
					AND TITLE LIKE '%' || #{searchText}  || '%'
				</when>
				<when test="searchGbn eq 2">
					AND CON LIKE '%' || #{searchText} || '%'
				</when>
        	</choose>
		</if>
	</select>
	
	<select id="getQnaList" resultType="hashmap" parameterType="hashmap">
		SELECT  Q.MEM_NUM, Q.QNA_NUM, Q.TITLE, Q.CON , Q.PRIVATE, Q.HIT,Q.ANSWER_CON, Q.PRIVATE,
				CASE WHEN TO_CHAR(Q.REG_DT, 'YY.MM.DD') = TO_CHAR(SYSDATE, 'YY.MM.DD')
								THEN TO_CHAR(Q.REG_DT, 'HH24:MI')
								ELSE TO_CHAR(Q.REG_DT,'YY.MM.DD')
								END AS REG_DT,
				CASE WHEN TO_CHAR(Q.ANSWER_DT, 'YY.MM.DD') = TO_CHAR(SYSDATE, 'YY.MM.DD')
								THEN TO_CHAR(Q.ANSWER_DT, 'HH24:MI')
								ELSE TO_CHAR(Q.ANSWER_DT,'YY.MM.DD')
								END AS ANSWER_DT
		FROM QNA Q 
		WHERE MEM_NUM = #{no} AND DEL = 1 AND QNA_NUM = #{qna_num}
	</select>
	
	<!-- qna 수정, 삭제는 Qna_SQL.xml 사용함. -->
</mapper>